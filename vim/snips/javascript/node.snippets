snippet 3rd "declare 3rd-party package dependency (node.js)" !b
// 3rd-party
const ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet

snippet cli "console.log with util.inspect (node.js)" !b
console.log(require('util').inspect(${1:obj}, true, ${2:10}, true));
endsnippet

snippet cr "declare package dependency as constant (node.js)" !b
const ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet

snippet init "initialize  (node.js)" !b
// init
const ${1:package} = $0;
endsnippet

snippet local "declare local package dependency (node.js)" !b
// local
const ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet

snippet lr "declare package dependency (node.js)" !b
let ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet

snippet me "module.exports (node.js)" !b
module.exports = $0
endsnippet

snippet pe "process.exit (node.js)" !b
process.exit(${1:0});
endsnippet

snippet req "require package dependency (node.js)" !
require('${1:package}')${0:;}
endsnippet

snippet sut "declare system under test (node.js)" !b
// sut
const ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet

snippet stdlib "declare stdlib package dependency (node.js)" !b
// stdlib
const ${1:package} = require('${2:$1}')$3;
endsnippet

snippet vr "declare package dependency (node.js)" !b
var ${1:package} = require('${2:./}${3:$1}')$4;
endsnippet
